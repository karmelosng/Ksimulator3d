package com.karmelos.ksimulator;

import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

//custom ListCellRenderer class to display jlist with icons
/**
 *
 * @author ADEBAYO
 */
public class SimViewTest extends javax.swing.JFrame {

    public SimViewTest() {
        initComponents();
        testJListAvailableComponents.setCellRenderer(new IconListRenderer());
        testJListUsedComponents.setCellRenderer(new IconListRenderer());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        availablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        testJListAvailableComponents = new javax.swing.JList();
        testJcomboPanel = new javax.swing.JPanel();
        testJcomboPanelLabel = new javax.swing.JLabel();
        testJCombo = new javax.swing.JComboBox();
        usedPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        testJListUsedComponents = new javax.swing.JList();
        testDeleteOptionPanel = new javax.swing.JPanel();
        deleteLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TEST FRAME");

        availablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Components", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10))); // NOI18N

        testJListAvailableComponents.setForeground(new java.awt.Color(51, 51, 255));
        testJListAvailableComponents.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Backcasing" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        testJListAvailableComponents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(testJListAvailableComponents);

        javax.swing.GroupLayout availablePanelLayout = new javax.swing.GroupLayout(availablePanel);
        availablePanel.setLayout(availablePanelLayout);
        availablePanelLayout.setHorizontalGroup(
            availablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );
        availablePanelLayout.setVerticalGroup(
            availablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        testJcomboPanelLabel.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        testJcomboPanelLabel.setText("Select Phone Module:");

        testJCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout testJcomboPanelLayout = new javax.swing.GroupLayout(testJcomboPanel);
        testJcomboPanel.setLayout(testJcomboPanelLayout);
        testJcomboPanelLayout.setHorizontalGroup(
            testJcomboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testJcomboPanelLayout.createSequentialGroup()
                .addGroup(testJcomboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testJcomboPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        testJcomboPanelLayout.setVerticalGroup(
            testJcomboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testJcomboPanelLayout.createSequentialGroup()
                .addComponent(testJcomboPanelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(testJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        usedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Used Components", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10))); // NOI18N

        testJListUsedComponents.setForeground(new java.awt.Color(0, 255, 51));
        testJListUsedComponents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(testJListUsedComponents);

        javax.swing.GroupLayout usedPanelLayout = new javax.swing.GroupLayout(usedPanel);
        usedPanel.setLayout(usedPanelLayout);
        usedPanelLayout.setHorizontalGroup(
            usedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        usedPanelLayout.setVerticalGroup(
            usedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        deleteLabel.setForeground(new java.awt.Color(255, 0, 51));
        deleteLabel.setText("Delete");

        javax.swing.GroupLayout testDeleteOptionPanelLayout = new javax.swing.GroupLayout(testDeleteOptionPanel);
        testDeleteOptionPanel.setLayout(testDeleteOptionPanelLayout);
        testDeleteOptionPanelLayout.setHorizontalGroup(
            testDeleteOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testDeleteOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        testDeleteOptionPanelLayout.setVerticalGroup(
            testDeleteOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testDeleteOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(testJcomboPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(availablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(testDeleteOptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(usedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testJcomboPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(availablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(testDeleteOptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(usedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimViewTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimViewTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimViewTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimViewTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimViewTest().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel availablePanel;
    private javax.swing.JLabel deleteLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JPanel testDeleteOptionPanel;
    protected javax.swing.JComboBox testJCombo;
    protected javax.swing.JList testJListAvailableComponents;
    protected javax.swing.JList testJListUsedComponents;
    private javax.swing.JPanel testJcomboPanel;
    private javax.swing.JLabel testJcomboPanelLabel;
    private javax.swing.JPanel usedPanel;
    // End of variables declaration//GEN-END:variables
}

class IconListRenderer implements ListCellRenderer {

    DefaultListCellRenderer defaultRenderer = new DefaultListCellRenderer();

    @Override
    public Component getListCellRendererComponent(JList list, Object value, int index,
            boolean isSelected, boolean cellHasFocus) {

        JLabel renderer = (JLabel) defaultRenderer.getListCellRendererComponent(list, value, index,
                isSelected, cellHasFocus);
        if (value.equals("Backcasing")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\backcasing.png"));
        }
        if (value.equals("Frame")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\frame.png"));
        }
        if (value.equals("FaceCover")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\facecover.png"));
        }
        if (value.equals("innerscreen")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\innerscreen.png"));
        }
        if (value.equals("keypad")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\keypad.png"));
        }
        if (value.equals("MotherBoard")) {


            renderer.setIcon(new ImageIcon("C:\\Users\\ADEBAYO\\Documents\\NetBeansProjects\\THEKSIMULATOR\\test\\com\\karmelos\\ksimulator\\motherboard.png"));
        }



        return renderer;
    }
}